"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _Text = _interopRequireDefault(require("../Text"));

var _colors = _interopRequireDefault(require("../../theme/colors"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: flex;\n  align-items: center;\n  height: 30px;\n  padding: 0 10px;\n  background-color: ", ";\n  border: 1px solid ", ";\n  border-radius: ", ";\n  &:active,\n  &:focus {\n    outline: 0;\n  }\n\n  > svg + span,\n  > span + svg {\n    margin-left: 10px;\n  }\n  > svg g {\n    stroke: ", ";\n  }\n\n  ", "\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var PickerButton = (0, _styledComponents["default"])(function (props) {
  return _react["default"].createElement(_Text["default"], _extends({
    as: "button",
    fontWeight: "semiBold",
    color: props.isActive ? 'mediumBlue' : 'greyDark'
  }, props));
})(_templateObject(), function (_ref) {
  var theme = _ref.theme;
  return theme.main.colors.white;
}, function (_ref2) {
  var theme = _ref2.theme;
  return theme.main.colors.darkGrey;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.main.sizes.borderRadius;
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.main.colors.greyDark;
}, function (_ref5) {
  var isActive = _ref5.isActive,
      theme = _ref5.theme;
  return isActive ? "\n        background-color: ".concat(theme.main.colors.lightBlue, ";\n        border: 1px solid ").concat(theme.main.colors.darkBlue, ";\n        color: ").concat(theme.main.colors.mediumBlue, ";\n        > svg g {\n          stroke: ").concat(theme.main.colors.mediumBlue, ";\n        }\n      ") : "\n        &:hover {\n          background-color: ".concat(theme.main.colors.lightestGrey, ";\n        }\n      ");
});
PickerButton.defaultProps = {
  isActive: false,
  type: 'button',
  theme: {
    main: {
      colors: _colors["default"],
      sizes: {
        borderRadius: '2px',
        fonts: {
          xs: '11px',
          sm: '12px',
          md: '13px',
          lg: '18px'
        }
      },
      fontWeights: {
        regular: 400,
        semiBold: 500,
        bold: 600,
        black: 900
      }
    }
  }
};
PickerButton.propTypes = {
  isActive: _propTypes["default"].bool,
  type: _propTypes["default"].string
};
var _default = PickerButton;
exports["default"] = _default;