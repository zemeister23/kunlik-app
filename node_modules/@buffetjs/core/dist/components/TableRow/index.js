"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _lodash = require("lodash");

var _styles = require("@buffetjs/styles");

var _Icon = _interopRequireDefault(require("../Icon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function TableRow(_ref) {
  var headers = _ref.headers,
      _onClick = _ref.onClick,
      onSelect = _ref.onSelect,
      row = _ref.row,
      rowLinks = _ref.rowLinks,
      withBulkAction = _ref.withBulkAction;
  return _react["default"].createElement("tr", {
    onClick: function onClick(e) {
      e.preventDefault();
      e.stopPropagation();

      _onClick(e, row);
    }
  }, withBulkAction && _react["default"].createElement("td", null, _react["default"].createElement(_styles.Checkbox, {
    onClick: function onClick(e) {
      e.stopPropagation();
    },
    onChange: onSelect,
    checked: row._isChecked
  })), headers.map(function (_ref2) {
    var cellName = _ref2.value,
        cellFormatter = _ref2.cellFormatter,
        cellAdapter = _ref2.cellAdapter;
    var displayedValue = !(0, _lodash.isObject)(row[cellName]) ? row[cellName] : '-';

    if ((0, _lodash.isFunction)(cellFormatter)) {
      displayedValue = cellFormatter(row[cellName], row);
    }

    var displayedContent = _react["default"].createElement("p", null, displayedValue || '-');

    if ((0, _lodash.isFunction)(cellAdapter)) {
      displayedContent = cellAdapter(row);
    }

    return _react["default"].createElement("td", {
      key: cellName,
      className: "".concat(cellName, "-cell")
    }, displayedContent);
  }), rowLinks.length > 0 && _react["default"].createElement("td", null, _react["default"].createElement("div", {
    style: {
      width: 'fit-content',
      "float": 'right'
    }
  }, _react["default"].createElement(_styles.Links, null, rowLinks.map(function (icon, index) {
    return _react["default"].createElement("button", {
      key: index + icon,
      onClick: function onClick(e) {
        e.preventDefault();
        e.stopPropagation();
        icon.onClick(row);
      },
      type: "button"
    }, _react["default"].createElement(_Icon["default"], {
      className: "link-icon",
      icon: icon.icon
    }));
  })))));
}

TableRow.defaultProps = {
  headers: [],
  onClick: function onClick() {},
  onSelect: function onSelect() {},
  row: {},
  rowLinks: [],
  withBulkAction: false
};
TableRow.propTypes = {
  headers: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    isSortEnabled: _propTypes["default"].bool,
    name: _propTypes["default"].string,
    value: _propTypes["default"].string
  })),
  onClick: _propTypes["default"].func,
  onSelect: _propTypes["default"].func,
  row: _propTypes["default"].object,
  rowLinks: _propTypes["default"].arrayOf(_propTypes["default"].shape({
    icon: _propTypes["default"].node
  })),
  withBulkAction: _propTypes["default"].bool
};
var _default = TableRow;
exports["default"] = _default;