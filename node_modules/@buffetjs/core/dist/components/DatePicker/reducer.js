"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initialState = exports["default"] = void 0;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var initialState = {
  date: null,
  displayedDate: '',
  isFocused: false,
  isVisible: false,
  visibleDate: ''
};
exports.initialState = initialState;

function reducer(state, action) {
  var date = action.date,
      displayedDate = action.displayedDate,
      isFocused = action.isFocused,
      isVisible = action.isVisible,
      type = action.type;

  switch (type) {
    case 'SET_DATE':
      return _objectSpread(_objectSpread({}, state), {}, {
        date: date,
        displayedDate: displayedDate
      });

    case 'SET_DISPLAYED_DATE':
      return _objectSpread(_objectSpread({}, state), {}, {
        displayedDate: displayedDate
      });

    case 'SET_IS_FOCUSED':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFocused: isFocused
      });

    case 'SET_IS_VISIBLE':
      return _objectSpread(_objectSpread({}, state), {}, {
        isVisible: isVisible
      });

    default:
      return state;
  }
}

var _default = reducer;
exports["default"] = _default;