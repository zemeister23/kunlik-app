"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _moment = _interopRequireDefault(require("moment"));

var _reactMomentProptypes = _interopRequireDefault(require("react-moment-proptypes"));

require("react-dates/initialize");

var _reactDates = require("react-dates");

var _freeRegularSvgIcons = require("@fortawesome/free-regular-svg-icons");

var _reactFontawesome = require("@fortawesome/react-fontawesome");

var _styles = require("@buffetjs/styles");

var _reducer = _interopRequireWildcard(require("./reducer"));

var _InputText = _interopRequireDefault(require("../InputText"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function Datepicker(_ref) {
  var className = _ref.className,
      value = _ref.value,
      withDefaultValue = _ref.withDefaultValue,
      disabled = _ref.disabled,
      displayFormat = _ref.displayFormat,
      id = _ref.id,
      name = _ref.name,
      onChange = _ref.onChange,
      readOnly = _ref.readOnly,
      tabIndex = _ref.tabIndex,
      wait = _ref.wait;

  var _useReducer = (0, _react.useReducer)(_reducer["default"], _reducer.initialState),
      _useReducer2 = _slicedToArray(_useReducer, 2),
      state = _useReducer2[0],
      dispatch = _useReducer2[1];

  (0, _react.useEffect)(function () {
    var date = null;
    var displayedDate = '';

    if (withDefaultValue && !value) {
      date = (0, _moment["default"])();
      displayedDate = date.format('MM/DD/YYYY');
    }

    if (!!value && (0, _moment["default"])(value).isValid()) {
      date = value._isAMomentObject === true ? value : (0, _moment["default"])(value);
      displayedDate = date.format('MM/DD/YYYY');
    }

    dispatch({
      type: 'SET_DATE',
      date: date
    });
    dispatch({
      type: 'SET_DISPLAYED_DATE',
      displayedDate: displayedDate
    });
  }, []);
  var timer = null;
  var date = state.date,
      displayedDate = state.displayedDate,
      isFocused = state.isFocused,
      isVisible = state.isVisible;

  var getDateValue = function getDateValue() {
    var dateValue = date ? date.format(displayFormat) : '';

    if (isVisible) {
      dateValue = displayedDate;
    }

    return dateValue;
  };

  var handleChange = function handleChange(_ref2) {
    var target = _ref2.target;
    clearTimeout(timer);
    dispatch({
      type: 'SET_IS_FOCUSED',
      isFocused: false
    });
    dispatch({
      type: 'SET_DISPLAYED_DATE',
      displayedDate: target.value
    });
    timer = setTimeout(function () {
      handleDateChange((0, _moment["default"])(target.value, 'MM/DD/YYYY'));
    }, wait);
  };

  var handleDateChange = function handleDateChange(dateValue) {
    if ((0, _moment["default"])(dateValue).isValid()) {
      onChange({
        target: {
          name: name,
          type: 'date',
          value: dateValue
        }
      });
      dispatch({
        type: 'SET_DATE',
        date: dateValue
      });
      dispatch({
        type: 'SET_DISPLAYED_DATE',
        displayedDate: dateValue.format('MM/DD/YYYY')
      });
    }
  };

  var handleDateClick = function handleDateClick(dateValue) {
    handleDateChange(dateValue);
    toggleDatepicker(false);
  };

  var handleTabClick = function handleTabClick(_ref3) {
    var keyCode = _ref3.keyCode,
        which = _ref3.which;
    var code = keyCode || which;

    if (code === 9) {
      toggleDatepicker(false);
    }
  };

  var toggleDatepicker = function toggleDatepicker(shown) {
    dispatch({
      type: 'SET_IS_VISIBLE',
      isVisible: shown
    });
    dispatch({
      type: 'SET_IS_FOCUSED',
      isFocused: shown
    });
  };

  return _react["default"].createElement(_styles.DatePicker, {
    isOpen: isVisible,
    className: className
  }, _react["default"].createElement("div", null, _react["default"].createElement(_InputText["default"], {
    disabled: disabled,
    type: "text",
    name: "start_date",
    id: id || name,
    value: getDateValue(),
    readOnly: readOnly,
    onChange: handleChange,
    icon: _react["default"].createElement(_reactFontawesome.FontAwesomeIcon, {
      icon: _freeRegularSvgIcons.faCalendarAlt
    }),
    onFocus: function onFocus() {
      return toggleDatepicker(true);
    },
    onClick: function onClick() {
      return toggleDatepicker(true);
    },
    onKeyDown: handleTabClick,
    tabIndex: tabIndex
  })), isFocused && _react["default"].createElement(_reactDates.DayPickerSingleDateController, {
    date: date,
    focused: true,
    numberOfMonths: 1,
    onDateChange: handleDateClick,
    onOutsideClick: function onOutsideClick() {
      return toggleDatepicker(false);
    },
    daySize: 37,
    transitionDuration: 0
  }));
}

Datepicker.defaultProps = {
  className: null,
  disabled: false,
  displayFormat: 'MMMM DD, YYYY',
  id: 'date',
  onChange: function onChange() {},
  readOnly: false,
  tabIndex: '0',
  value: null,
  wait: 600,
  withDefaultValue: false
};
Datepicker.propTypes = {
  className: _propTypes["default"].string,
  disabled: _propTypes["default"].bool,
  displayFormat: _propTypes["default"].string,
  id: _propTypes["default"].string,
  name: _propTypes["default"].string.isRequired,
  onChange: _propTypes["default"].func,
  readOnly: _propTypes["default"].bool,
  tabIndex: _propTypes["default"].string,
  value: _propTypes["default"].oneOfType([_reactMomentProptypes["default"].momentObj, _propTypes["default"].string]),
  wait: _propTypes["default"].number,
  withDefaultValue: _propTypes["default"].bool
};
var _default = Datepicker;
exports["default"] = _default;