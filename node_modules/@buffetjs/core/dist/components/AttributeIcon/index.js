"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _icons = require("@buffetjs/icons");

var _Div = _interopRequireDefault(require("./Div"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var types = {
  biginteger: _icons.NumberIcon,
  "boolean": _icons.Bool,
  component: _icons.Component,
  contentType: _icons.ContentType,
  date: _icons.Calendar,
  datetime: _icons.Calendar,
  decimal: _icons.NumberIcon,
  dynamiczone: _icons.DynamicZone,
  email: _icons.Email,
  "enum": _icons.Enumeration,
  enumeration: _icons.Enumeration,
  file: _icons.Media,
  files: _icons.Media,
  "float": _icons.NumberIcon,
  integer: _icons.NumberIcon,
  json: _icons.Json,
  JSON: _icons.Json,
  media: _icons.Media,
  number: _icons.NumberIcon,
  password: _icons.Password,
  relation: _icons.Relation,
  richtext: _icons.RichText,
  singleType: _icons.SingleType,
  string: _icons.Text,
  text: _icons.Text,
  time: _icons.Calendar,
  timestamp: _icons.Calendar,
  uid: _icons.Uid
};

var AttributeIcon = function AttributeIcon(_ref) {
  var type = _ref.type,
      rest = _objectWithoutProperties(_ref, ["type"]);

  var Compo = types[type];

  if (!types[type]) {
    return null;
  }

  return _react["default"].createElement(_Div["default"], _extends({}, rest, {
    type: type
  }), _react["default"].createElement(Compo, null));
};

AttributeIcon.propTypes = {
  type: _propTypes["default"].string.isRequired
};
var _default = AttributeIcon;
exports["default"] = _default;