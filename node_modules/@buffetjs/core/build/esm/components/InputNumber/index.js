var _excluded = ["autoFocus", "id", "className", "name", "onChange", "tabIndex", "value"];

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

/**
 *
 * InputNumber
 *
 */
import React from 'react';
import RcInputNumber from 'rc-input-number';
import PropTypes from 'prop-types';
import { InputNumber as StyledInputNumber } from '@buffetjs/styles';

function InputNumber(_ref) {
  var autoFocus = _ref.autoFocus,
      id = _ref.id,
      className = _ref.className,
      name = _ref.name,
      onChange = _ref.onChange,
      tabIndex = _ref.tabIndex,
      value = _ref.value,
      rest = _objectWithoutProperties(_ref, _excluded);

  var handleChange = function handleChange(data) {
    if (data !== null) {
      var target = {
        id: id,
        name: name,
        type: 'number',
        value: data
      };
      onChange({
        target: target
      });
    }
  };

  return /*#__PURE__*/React.createElement(StyledInputNumber, {
    className: className
  }, /*#__PURE__*/React.createElement(RcInputNumber, _extends({}, rest, {
    autoFocus: autoFocus,
    id: id || name,
    name: name,
    onChange: handleChange,
    tabIndex: tabIndex,
    value: value,
    className: "inputNumber"
  })));
}

InputNumber.defaultProps = {
  autoComplete: 'off',
  autoFocus: false,
  className: null,
  id: null,
  onChange: function onChange() {},
  placeholder: null,
  tabIndex: '0',
  value: 0
};
InputNumber.propTypes = {
  autoComplete: PropTypes.string,
  autoFocus: PropTypes.bool,
  className: PropTypes.string,
  id: PropTypes.string,
  name: PropTypes.string.isRequired,
  onChange: PropTypes.func,
  placeholder: PropTypes.string,
  tabIndex: PropTypes.string,
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
};
export default InputNumber;