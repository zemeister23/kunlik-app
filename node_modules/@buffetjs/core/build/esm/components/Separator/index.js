var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import PropTypes from 'prop-types';
import styled from 'styled-components';
import Flex from '../Flex';
import Padded from '../Padded';
import Text from '../Text';
import colors from '../../theme/colors';
var BorderTop = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-top: 1px solid ", ";\n  width: 100%;\n"])), function (_ref) {
  var theme = _ref.theme;
  return theme.main.colors.border;
});
BorderTop.defaultProps = {
  theme: {
    main: {
      colors: colors
    }
  }
};
BorderTop.propTypes = {
  // eslint-disable-next-line react/forbid-prop-types
  theme: PropTypes.object
};

var Separator = function Separator(_ref2) {
  var label = _ref2.label;
  return /*#__PURE__*/React.createElement(Flex, {
    justifyContent: "center",
    alignItems: "center"
  }, label ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BorderTop, null), /*#__PURE__*/React.createElement(Padded, {
    left: true,
    right: true,
    size: "sm"
  }, /*#__PURE__*/React.createElement(Text, {
    color: "grey"
  }, label)), /*#__PURE__*/React.createElement(BorderTop, null)) : /*#__PURE__*/React.createElement(BorderTop, null));
};

Separator.defaultProps = {
  label: null
};
Separator.propTypes = {
  label: PropTypes.string
};
export default Separator;