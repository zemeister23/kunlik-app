var _excluded = ["label", "onClick"];

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import { Remove } from '@buffetjs/icons';
import { Option as Wrapper } from '@buffetjs/styles';
import { upperFirst } from 'lodash';
import RemoveButton from './RemoveButton';

function Filter(_ref) {
  var label = _ref.label,
      onClick = _ref.onClick,
      rest = _objectWithoutProperties(_ref, _excluded);

  var content = typeof label === 'string' ? /*#__PURE__*/React.createElement("span", null, upperFirst(label)) : label;
  return /*#__PURE__*/React.createElement(Wrapper, rest, content, /*#__PURE__*/React.createElement(RemoveButton, {
    type: "button",
    onClick: onClick
  }, /*#__PURE__*/React.createElement(Remove, {
    width: "11px",
    height: "11px",
    fill: "#007eff"
  })));
}

Filter.defaultProps = {
  label: '',
  onClick: function onClick() {}
};
Filter.propTypes = {
  label: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),
  onClick: PropTypes.func
};
export default Filter;