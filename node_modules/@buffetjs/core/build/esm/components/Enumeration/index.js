/**
 *
 * Enumeration
 *
 */
import React from 'react';
import PropTypes from 'prop-types';
import { Enumeration as StyledEnumeration, EnumerationWrapper } from '@buffetjs/styles';
import Label from '../Label';

function Enumeration(_ref) {
  var disabled = _ref.disabled,
      id = _ref.id,
      className = _ref.className,
      name = _ref.name,
      onChange = _ref.onChange,
      options = _ref.options,
      value = _ref.value;
  return /*#__PURE__*/React.createElement(EnumerationWrapper, {
    className: className
  }, options.map(function (option) {
    return /*#__PURE__*/React.createElement(Label, {
      key: option.value,
      htmlFor: id || name
    }, /*#__PURE__*/React.createElement(StyledEnumeration, {
      disabled: disabled,
      checked: option.value === value,
      name: id || name,
      onChange: onChange,
      value: option.value
    }), /*#__PURE__*/React.createElement("span", null, option.label));
  }));
}

Enumeration.defaultProps = {
  className: null,
  disabled: false,
  id: null,
  onChange: function onChange() {},
  options: [],
  value: null
};
Enumeration.propTypes = {
  className: PropTypes.string,
  disabled: PropTypes.bool,
  id: PropTypes.string,
  name: PropTypes.string.isRequired,
  onChange: PropTypes.func,
  options: PropTypes.arrayOf(PropTypes.shape({
    label: PropTypes.string,
    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])
  })),
  value: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.object])
};
export default Enumeration;