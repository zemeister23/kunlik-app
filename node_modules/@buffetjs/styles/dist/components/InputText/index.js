"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _colors = _interopRequireDefault(require("../../assets/styles/colors"));

var _sizes = _interopRequireDefault(require("../../assets/styles/sizes"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  // General style\n  width: 100%;\n  height: ", ";\n  padding: 0 ", ";\n  font-weight: ", ";\n  font-size: ", ";\n  cursor: text;\n  outline: 0;\n  border: 1px solid ", ";\n  border-radius: ", ";\n  color: ", ";\n  background-color: transparent;\n\n  &::-webkit-input-placeholder {\n    color: ", ";\n  }\n\n  &:focus {\n    border-color: ", ";\n  }\n\n  &:disabled {\n    background-color: ", ";\n    cursor: not-allowed;\n    color: ", ";\n  }\n\n  ", "}\n\n  ", "}\n"]);

  _templateObject = function _templateObject() {
    return data;
  };

  return data;
}

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var InputText = _styledComponents["default"].input(_templateObject(), _sizes["default"].input.height, _sizes["default"].input.padding, _sizes["default"].fontWeight.regular, _sizes["default"].input.fontSize, _colors["default"].lightGrey, _sizes["default"].borderRadius, _colors["default"].blueTxt, _colors["default"].greyPlaceholder, _colors["default"].blueBorder, _colors["default"].greyIconBkgd, _colors["default"].brightGrey, function (props) {
  return (props.type === 'search' || props.type === 'email' || props.icon) && "\n      padding-left: calc(".concat(_sizes["default"].input.height, " + ").concat(_sizes["default"].input.padding, ");\n    ");
}, function (props) {
  return props.type === 'password' && "\n      padding-right: calc(".concat(_sizes["default"].input.height, " + ").concat(_sizes["default"].input.padding, ");\n    ");
});

InputText.defaultProps = {
  type: 'text'
};
InputText.propTypes = {
  type: _propTypes["default"].string
};
var _default = InputText;
exports["default"] = _default;